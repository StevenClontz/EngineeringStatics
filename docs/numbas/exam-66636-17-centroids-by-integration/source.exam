// Numbas version: exam_results_page_options
{"name": "17. Centroids by Integration", "metadata": {"description": "", "licence": "Creative Commons Attribution-ShareAlike 4.0 International"}, "duration": 0, "percentPass": 0, "showQuestionGroupNames": false, "showstudentname": true, "question_groups": [{"name": "Group", "pickingStrategy": "all-ordered", "pickQuestions": 1, "questionNames": ["", "", "", ""], "questions": [{"name": "Differential Elements", "extensions": ["geogebra", "weh"], "custom_part_types": [], "resources": [], "navigation": {"allowregen": true, "showfrontpage": false, "preventleave": false}, "contributors": [{"name": "William Haynes", "profile_url": "https://numbas.mathcentre.ac.uk/accounts/profile/2530/"}], "tags": ["centroids", "centroids by integration", "Mechanics", "mechanics", "statics", "Statics"], "metadata": {"description": "<p>Given a random spandrel, find the expressions for the differential elements of area and the coordinates of its centroid needed to determine the location of the&nbsp;centroid by integration.&nbsp;</p>", "licence": "Creative Commons Attribution-NonCommercial 4.0 International"}, "statement": "<p style=\"float: right; padding: 3px;\">{geogebra_applet('tpndhsyt',[['version',version]])}</p>", "advice": "<p>The area of the strip, dA is the width times the height of the strip.</p>\n<p>The narrow width of the element is either $dx$ or $dy$&nbsp;</p>\n<p>The coordinates of the centroid are found by averaging the coordinates of the top and bottom of the strip.</p>", "rulesets": {}, "variables": {"dA": {"name": "dA", "group": "Ungrouped variables", "definition": "expression(['y*dx',\"(y'-y)*dx\",\"(b-y)*dx\", \"(x-x')*dy\",\"x*dy\",\"(a-x)*dy\"][version-1\n])", "description": "", "templateType": "anything"}, "ybar": {"name": "ybar", "group": "Ungrouped variables", "definition": "expression([\"y/2\",\"(y+y')/2\",\"(y+b)/2\",\"y\",\"y\",\"y\"][version-1])", "description": "", "templateType": "anything"}, "xbar": {"name": "xbar", "group": "Ungrouped variables", "definition": "expression([\"x\",\"x\",\"x\",\"(x+x')/2\",\"x/2\",\"(x+a)/2\"][version-1])", "description": "", "templateType": "anything"}, "version": {"name": "version", "group": "Ungrouped variables", "definition": "random(1..6)", "description": "", "templateType": "anything"}}, "variablesTest": {"condition": "", "maxRuns": 100}, "ungrouped_variables": ["version", "dA", "xbar", "ybar"], "variable_groups": [], "functions": {}, "preamble": {"js": "", "css": ""}, "parts": [{"type": "gapfill", "useCustomName": false, "customName": "", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p>Determine the properties of the differential strip in terms of the known coordinates.</p>\n<p>$dA$ =&nbsp;[[0]]</p>\n<p>$\\bar{x}_{el}$ =&nbsp;[[1]]&nbsp;</p>\n<p>$\\bar{y}_{el}$ =[[2]]&nbsp;&nbsp;</p>", "gaps": [{"type": "jme", "useCustomName": true, "customName": "da", "marks": "10", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "answer": "{dA}", "showPreview": true, "checkingType": "absdiff", "checkingAccuracy": 0.001, "failureRate": 1, "vsetRangePoints": 5, "vsetRange": [0, 1], "checkVariableNames": false, "singleLetterVariables": false, "allowUnknownFunctions": true, "implicitFunctionComposition": false, "valuegenerators": []}, {"type": "jme", "useCustomName": true, "customName": "xbar", "marks": "10", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "answer": "{xbar}", "showPreview": true, "checkingType": "absdiff", "checkingAccuracy": 0.001, "failureRate": 1, "vsetRangePoints": 5, "vsetRange": [0, 1], "checkVariableNames": false, "singleLetterVariables": false, "allowUnknownFunctions": true, "implicitFunctionComposition": false, "valuegenerators": []}, {"type": "jme", "useCustomName": true, "customName": "ybar", "marks": "10", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "answer": "{ybar}", "showPreview": true, "checkingType": "absdiff", "checkingAccuracy": 0.001, "failureRate": 1, "vsetRangePoints": 5, "vsetRange": [0, 1], "checkVariableNames": false, "singleLetterVariables": false, "allowUnknownFunctions": true, "implicitFunctionComposition": false, "valuegenerators": []}], "sortAnswers": false}], "partsMode": "all", "maxMarks": 0, "objectives": [], "penalties": [], "objectiveVisibility": "always", "penaltyVisibility": "always"}, {"name": "Area under a curve by integration", "extensions": ["geogebra", "quantities", "weh"], "custom_part_types": [{"source": {"pk": 19, "author": {"name": "William Haynes", "pk": 2530}, "edit_page": "/part_type/19/edit"}, "name": "Engineering Accuracy with units", "short_name": "engineering-answer", "description": "<p>A value with units marked right if within an adjustable % error of the correct value. &nbsp;Marked close if within a wider margin of error.</p>", "help_url": "", "input_widget": "string", "input_options": {"correctAnswer": "siground(settings['correctAnswer'],4)", "hint": {"static": true, "value": ""}, "allowEmpty": {"static": true, "value": true}}, "can_be_gap": true, "can_be_step": true, "marking_script": "mark:\nswitch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n\n\ninterpreted_answer:\nqty(student_scalar, student_units)\n\n\n\ncorrect_quantity:\nsettings[\"correctAnswer\"]\n\n\n\ncorrect_units:\nunits(correct_quantity)\n\n\nallowed_notation_styles:\n[\"plain\",\"en\"]\n\nmatch_student_number:\nmatchnumber(studentAnswer,allowed_notation_styles)\n\nstudent_scalar:\nmatch_student_number[1]\n\nstudent_units:\njoin(\nsplit(\njoin(\nsplit(studentAnswer[len(match_student_number[0])..len(studentAnswer)],\"-\"),\" \"),\"\u00b0\"),\" deg\")\n\n\ngood_units:\ntry(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n\n\nstudent_quantity:\nswitch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n\n\npercent_error:\ntry(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   \n\nright:\npercent_error <= settings['right']\n\n\nclose:\nright_sign and percent_error <= settings['close']\n\nright_sign:\nsign(student_scalar) = sign(correct_quantity)", "marking_notes": [{"name": "mark", "description": "This is the main marking note. It should award credit and provide feedback based on the student's answer.", "definition": "switch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n"}, {"name": "interpreted_answer", "description": "A value representing the student's answer to this part.", "definition": "qty(student_scalar, student_units)\n\n"}, {"name": "correct_quantity", "description": "", "definition": "settings[\"correctAnswer\"]\n\n"}, {"name": "correct_units", "description": "", "definition": "units(correct_quantity)\n"}, {"name": "allowed_notation_styles", "description": "", "definition": "[\"plain\",\"en\"]"}, {"name": "match_student_number", "description": "", "definition": "matchnumber(studentAnswer,allowed_notation_styles)"}, {"name": "student_scalar", "description": "", "definition": "match_student_number[1]"}, {"name": "student_units", "description": "<p>Does clumsy substitution to</p>\n<p>1.&nbsp;replace '-'&nbsp;with ' '&nbsp;</p>\n<p>2. replace '&deg;' with ' deg'&nbsp;</p>\n<p>to allow answers like 10 ft-lb and 30&deg;</p>", "definition": "join(\nsplit(\njoin(\nsplit(studentAnswer[len(match_student_number[0])..len(studentAnswer)],\"-\"),\" \"),\"\u00b0\"),\" deg\")\n"}, {"name": "good_units", "description": "", "definition": "try(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n"}, {"name": "student_quantity", "description": "<p>This fixes the student answer for two common errors. &nbsp;</p>\n<p>If student_units are wrong&nbsp;&nbsp;- replace with correct units</p>\n<p>If student_scalar has the wrong sign - replace with right sign</p>\n<p>If student makes both errors, only one gets fixed.</p>", "definition": "switch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n"}, {"name": "percent_error", "description": "", "definition": "try(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   "}, {"name": "right", "description": "", "definition": "percent_error <= settings['right']\n"}, {"name": "close", "description": "<p>Only marked close if the student actually has the right sign.</p>", "definition": "right_sign and percent_error <= settings['close']"}, {"name": "right_sign", "description": "", "definition": "sign(student_scalar) = sign(correct_quantity) "}], "settings": [{"name": "correctAnswer", "label": "Correct Quantity.", "help_url": "", "hint": "The correct answer given as a JME quantity.", "input_type": "code", "default_value": "", "evaluate": true}, {"name": "right", "label": "% Accuracy for right.", "help_url": "", "hint": "Question will be considered correct if the scalar part of the student's answer is within this % of correct value.", "input_type": "code", "default_value": "0.2", "evaluate": true}, {"name": "close", "label": "% Accuracy for close.", "help_url": "", "hint": "Question will be considered close if the scalar part of the student's answer is within this % of correct value.", "input_type": "code", "default_value": "1.0", "evaluate": true}, {"name": "C1", "label": "Close with units.", "help_url": "", "hint": "Partial Credit for close value with appropriate units. &nbsp;if correct answer is 100 N and close is &plusmn;1%,<br />99 &nbsp;N is accepted.", "input_type": "percent", "default_value": "75"}, {"name": "C2", "label": "No units or wrong sign", "help_url": "", "hint": "Partial credit for forgetting units or using wrong sign.<br />If the correct answer is 100 N, both 100 and -100 N are accepted.", "input_type": "percent", "default_value": "50"}, {"name": "C3", "label": "Close, no units.", "help_url": "", "hint": "Partial Credit for close value but forgotten units.<br />This value would be close&nbsp;if the expected units were provided. &nbsp;If the correct answer is 100 N, and close is &plusmn;1%,<br />99 is accepted.", "input_type": "percent", "default_value": "25"}], "public_availability": "always", "published": true, "extensions": ["quantities"]}], "resources": [["question-resources/centroid-integration.ggb", "/srv/numbas/media/question-resources/centroid-integration.ggb"]], "navigation": {"allowregen": true, "showfrontpage": false, "preventleave": false}, "contributors": [{"name": "William Haynes", "profile_url": "https://numbas.mathcentre.ac.uk/accounts/profile/2530/"}], "tags": ["area", "Area", "definite integral", "Mechanics", "mechanics", "Statics", "statics"], "metadata": {"description": "<p>Find roots and the area under a parabola</p>", "licence": "Creative Commons Attribution-NonCommercial 4.0 International"}, "statement": "<p style=\"float: right; padding: 3px;\">{applet()}</p>\n<p>Given the function $\\color{red}{y=\\simplify[!noleadingminus,unitfactor]{{A} x^2 + {B} x + {C}}}$, determine the area under the curve from the <em>y</em>-axis to the point where the curve crosses the positive <em>x</em>-axis. &nbsp;The x- and y- coordinates are in&nbsp;[{units}].&nbsp;You may not use a graphing calculator to solve this problem.</p>\n<p></p>\n<p></p>\n<p></p>", "advice": "<ol>\n<li>To find the point where the curve crosses the <em>y</em>-axis, set <em>x</em> = 0 and solve for <em>y</em>.</li>\n<li>To find the point where the curve crosses the positive <em>x</em>-axis, set <em>y</em> to zero and solve for <em>x</em> using the quadratic formula. Take the positive root.</li>\n<li>To find the area under the curve, divide the shaded area into vertical differential strips where&nbsp;$dA = y\\, dx$ then integrate between the horizontal limits to find the area.</li>\n</ol>\n<p style=\"padding-left: 30px;\">$\\begin{align}A &amp;= \\int dA \\\\&amp;= \\int_0^a y\\,dx \\\\&amp;= \\int_0^a(\\simplify[!noleadingminus,unitfactor]{{A} x^2 + {B} x + {C}})\\, dx\\\\&amp; = \\left[&nbsp;\\simplify[unitfactor,collectnumbers]{{A}&nbsp;x^3/3&nbsp;+ {B} x^2/2 + {C}x}\\right]_0^\\var{scalar(siground(root1,4))}\\\\&amp;=\\var{siground(area,4)}\\end{align}$</p>", "rulesets": {}, "variables": {"area": {"name": "area", "group": "Ungrouped variables", "definition": "let(x,scalar(root1), qty(A x^3/3 + B x^2/2 + C x,units)) qty(units)", "description": "", "templateType": "anything"}, "A": {"name": "A", "group": "Ungrouped variables", "definition": "random(-0.5..-2#0.5)", "description": "", "templateType": "anything"}, "debug": {"name": "debug", "group": "Ungrouped variables", "definition": "false", "description": "", "templateType": "anything"}, "C": {"name": "C", "group": "Ungrouped variables", "definition": "random(0..3)+0.5", "description": "", "templateType": "anything"}, "B": {"name": "B", "group": "Ungrouped variables", "definition": "random(1..4)", "description": "", "templateType": "anything"}, "units": {"name": "units", "group": "Ungrouped variables", "definition": "random('in','ft','mm','cm')", "description": "", "templateType": "anything"}, "root1": {"name": "root1", "group": "Ungrouped variables", "definition": "qty((-b - sqrt(b^2-4 a c))/(2 a),units)", "description": "", "templateType": "anything"}}, "variablesTest": {"condition": "", "maxRuns": 100}, "ungrouped_variables": ["A", "B", "C", "root1", "area", "units", "debug"], "variable_groups": [], "functions": {"applet": {"parameters": [], "type": "ggbapplet", "language": "javascript", "definition": "\n// Create the worksheet. \n// This function returns an object with a container `element` and a `promise` resolving to a GeoGebra applet.\nvar params = {\n  filename: 'resources/question-resources/centroid-integration.ggb',\n  width: 300,\n  height: 300\n  // was {geogebra_applet('nuhzkzqp',[['a',A],['b',B],['c',C]])}\n}\n\nvar result = Numbas.extensions.geogebra.createGeogebraApplet(params);\n\n// Once the applet has loaded, run some commands to manipulate the worksheet.\nresult.promise.then(function(d) {\n  var app = d.app;\n  question.applet = d;\n  \n function setGGBNumber(name) {\n    // Sets number in GGB to a Numbas Variable\n    var n = question.scope.evaluate(name).value;\n    app.setValue(name,n);\n  }\n  \nfunction setGGBPoint(name) {\n    // moves point in GGB to location of Numbas Vector Variable\n    var pt = question.scope.evaluate(name).value\n    app.setFixed(name,false,false);\n    app.setCoords(name, pt[0], pt[1]);\n    app.setFixed(name,true,true);\n  }\n\n  setGGBPoint(\"a\");\n  setGGBPoint(\"b\");\n  setGGBPoint(\"c\");\n  app.setGridVisible(false);\n  app.recalculateEnvironments();\n\n  \n});\n\n// This function returns the result of `createGeogebraApplet` as an object \n// with the JME data type 'ggbapplet', which can be substituted into the question's content.\nreturn new Numbas.jme.types.ggbapplet(result);"}}, "preamble": {"js": "", "css": ""}, "parts": [{"type": "gapfill", "useCustomName": false, "customName": "", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p>Determine the points where the curve crosses the axes.</p>\n<p>$h$ =&nbsp;[[0]] <span data-jme-visible=\"debug\">{qty(C,units)}</span></p>\n<p>$a$ =&nbsp;[[1]] <span data-jme-visible=\"debug\">{siground(root1,4)}</span></p>", "gaps": [{"type": "engineering-answer", "useCustomName": true, "customName": "h", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "qty(C,units)", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}, {"type": "engineering-answer", "useCustomName": true, "customName": "a", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "root1", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}], "sortAnswers": false}, {"type": "gapfill", "useCustomName": true, "customName": "A", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p>Set up and evaluate&nbsp;the integral equation below to find the area under the curve.</p>\n<p>$\\begin{align} A &amp;= \\int{dA}\\\\&amp;=\\int_0^a y\\, dx \\\\ \\vdots\\end{align}$</p>\n<p>$A$ = [[0]] <span data-jme-visible=\"debug\">&nbsp;{siground(area,4)}</span></p>", "gaps": [{"type": "engineering-answer", "useCustomName": true, "customName": "area", "marks": "10", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "settings": {"correctAnswer": "area", "right": "0.2", "close": "1.0", "C1": "75", "C2": "50", "C3": "25"}}], "sortAnswers": false}], "partsMode": "all", "maxMarks": 0, "objectives": [], "penalties": [], "objectiveVisibility": "always", "penaltyVisibility": "always"}, {"name": "Centroids by integration ", "extensions": ["geogebra"], "custom_part_types": [], "resources": [], "navigation": {"allowregen": true, "showfrontpage": false, "preventleave": false}, "contributors": [{"name": "William Haynes", "profile_url": "https://numbas.mathcentre.ac.uk/accounts/profile/2530/"}], "tags": ["area under curve", "centroidal coordinates", "centroids by integration", "first moment of area", "integration", "Mechanics", "mechanics", "Statics", "statics"], "metadata": {"description": "<p>Find the area, first moment of area, and coordinates of a general spandrel. &nbsp;The area&nbsp;may be above or below the function.</p>", "licence": "Creative Commons Attribution-NonCommercial 4.0 International"}, "statement": "<p style=\"float: right; padding: 3px;\">{geogebra_applet('bqnqgpfp',[['n',n],['h',random(1,1.5)],['b',random(0.8,1.3)],['Above', above],['Vertical',vertical]])}</p>\n<p>Use integration with {if(Vertical=1,'vertical','horizontal')} strips to determine the area&nbsp;of the spandrel bounded by the function $\\color{red}{y = f(x) = h - k \\simplify[all,fractionnumbers]{x^{n}}}$ and $\\var{if(Above=1, 'the lines $y=h$ and $x=b$','the $x$- and $y$-axes')}$,&nbsp;and also find the coordinates of its centroid. Note:&nbsp;<em>b</em>&nbsp;and <em>h</em> are constants.</p>", "advice": "<div data-jme-visible=\"vertical = 0\" style=\"background: yellow; border: 1px solid black; padding: 1em; margin: 1em;\">\n<p>Note: The solutions below is&nbsp;for Vertical Strips. &nbsp;</p>\n<p>The procedure&nbsp;for horizontal strips is similar, but with these strip properties and limits:</p>\n<p>Strip properties: &nbsp;<span data-jme-visible=\"Above = 1\">$dA = (b-x)\\,dy$, $\\bar{x}_{el} = \\frac{x+b}{y}$, $\\bar{y}_{el} = y&nbsp;$</span><span>&nbsp;</span><span data-jme-visible=\"above = 0\">$dA = x&nbsp;\\,dy$, $\\bar{x}_{el} = x/2$, $\\bar{y}_{el} =y$</span></p>\n<p>Limits: &nbsp;$x= 0 \\text{ to } h$</p>\n<p>You will get the same results for $A, Q_x, Q_y, \\bar{x} \\text{ and } \\bar{y}$, which ever strips you choose.</p>\n</div>\n<p>1. Bounding function: $y = f(x) = h - k \\simplify[all,fractionnumbers]{x^{n}}$</p>\n<p>2. Constant&nbsp;$k$ in terms of $b$:&nbsp;at $x=b, y=0&nbsp;\\therefore&nbsp;h - k&nbsp;\\simplify[all,fractionnumbers]{b^{n}} &nbsp;= 0 \\therefore k = \\dfrac{h}{\\simplify[all,fractionnumbers]{b^{n}}}$</p>\n<p>3. Strip properties: &nbsp;<span data-jme-visible=\"Above = 0\">$dA = y\\,dx$, $\\bar{x}_{el} = x$, $\\bar{y}_{el} = y/2$</span><span>&nbsp;</span><span data-jme-visible=\"above = 1\">$dA = (h-y)\\,dx$, $\\bar{x}_{el} = x$, $\\bar{y}_{el} = (h+y)/2$</span></p>\n<p>4. Limits: &nbsp;$x= 0 \\text{ to } b$</p>\n<p>5. Area under the curve:</p>\n<p><span data-jme-visible=\"above=0\">$\\begin{align} A &amp;= \\int dA\\\\&amp;= \\int_0^b y\\, dx\\\\&amp;= \\int_0^b &nbsp;(h - k \\simplify[all,fractionnumbers]{x^{n}})\\, dx\\\\&amp;= \\left[ hx - k \\dfrac{\\simplify[all,fractionnumbers]{x^{n+1}}}{\\simplify[all,fractionnumbers]{{n+1}}}\\right]_0^b\\\\&amp;= \\left[ hb - \\left(\\dfrac{h}{\\simplify[all,fractionnumbers]{b^{n}}}\\right)&nbsp;\\dfrac{\\simplify[all,fractionnumbers]{b^{n+1}}}{\\simplify[all,fractionnumbers]{{n+1}}}\\right]\\\\&amp;=hb-\\dfrac{hb}{\\simplify[all,fractionnumbers]{{n}+1}}\\\\&amp;=\\var[all,fractionnumbers]{{n}/({n}+1)} h b\\end{align}$</span></p>\n<p><span data-jme-visible=\"above=1\">$\\begin{align} A &amp;= \\int dA\\\\&amp;= \\int_0^b (h-y)\\, dx\\\\&amp;= \\int_0^b &nbsp;h - (h - k \\simplify[all,fractionnumbers]{x^{n}})\\, dx\\\\&amp;=\\int_0^bk \\simplify[all,fractionnumbers]{x^{n}}dx\\\\&amp;= \\left[k \\dfrac{\\simplify[all,fractionnumbers]{x^{n+1}}}{\\simplify[all,fractionnumbers]{{n+1}}}\\right]_0^b\\\\&amp;= \\left[ \\left(\\dfrac{h}{\\simplify[all,fractionnumbers]{b^{n}}}\\right)&nbsp;\\dfrac{\\simplify[all,fractionnumbers]{b^{n+1}}}{\\simplify[all,fractionnumbers]{{n+1}}}\\right]\\\\&amp;=\\dfrac{hb}{\\simplify[all,fractionnumbers]{{n}+1}}\\\\&amp;=\\var[all,fractionnumbers]{1/({n}+1)} h b\\end{align}$</span></p>\n<p>6. $Q_x$ and $Q_y$ &nbsp;Perform similar integrations to get:&nbsp;</p>\n<p><span data-jme-visible=\"above=0\">$Q_x = \\int \\bar{y}_{el}\\,dA &nbsp;= \\simplify[all,simplifyfractions,fractionnumbers]{{n}^2&nbsp;/(2{n}^2+3{n}+1) h^2b} &nbsp;\\qquad&nbsp;Q_y = \\int \\bar{x}_{el}\\,dA &nbsp;= \\simplify[all,fractionnumbers,simplifyfractions]{{n}/(2{n}+4)} hb^2$</span></p>\n<p><span data-jme-visible=\"above=1\">$Q_x = \\int \\bar{y}_{el}\\,dA &nbsp;= \\simplify[all,simplifyfractions,fractionnumbers]{(3{n}+1)/(2({n}+1)(2{n}+1))}h^2b&nbsp;\\qquad&nbsp;Q_y = \\int \\bar{x}_{el}\\,dA &nbsp;= \\simplify[all,fractionnumbers,simplifyfractions]{1/({n}+2)} hb^2$</span></p>\n<p>7. Centroid:</p>\n<p><span data-jme-visible=\"above=0\">$\\bar{x} = \\dfrac{Q_y}{A} = \\dfrac{\\simplify[all,fractionnumbers,simplifyfractions]{{n}/(2{n}+4)} hb^2}{\\var[all,fractionnumbers]{{n}/({n}+1)} h b} = \\simplify[all,collectnumbers]{({n}+1)/(2{n}+4)}b&nbsp;\\qquad&nbsp;\\bar{y} = \\dfrac{Q_x}{A} = \\dfrac{\\simplify[all,fractionnumbers,simplifyfractions]{{n^2}/(({n}+1)(2{n}+1))} h^2b}{\\var[all,fractionnumbers]{{n}/({n}+1)} h b}&nbsp;= \\simplify[all,collectnumbers,simplifyfractions]{{n}/(2{n}+1)}h&nbsp;$</span></p>\n<p><span data-jme-visible=\"above=1\">$\\bar{x} = \\dfrac{Q_y}{A} = \\dfrac{\\simplify[all,fractionnumbers,simplifyfractions]{1/({n}+2)} hb^2}{\\var[all,fractionnumbers]{1/({n}+1)} h b} = \\simplify[all,collectnumbers]{({n}+1)/({n}+2)}b&nbsp;\\qquad&nbsp;\\bar{y} = \\dfrac{Q_x}{A} = \\dfrac{\\simplify[all,simplifyfractions,fractionnumbers]{(3{n}+1)/(2({n}+1)(2{n}+1))}h^2b}{\\var[all,fractionnumbers]{1/({n}+1)} h b}&nbsp;= \\simplify[all,collectnumbers,simplifyfractions]{(3{n}+1)/(4{n}+2)}h&nbsp;$</span></p>", "rulesets": {}, "variables": {"Qy": {"name": "Qy", "group": "answers", "definition": " substitute([\"n\" :n],\n if(Above=1, \n    expression('h b^2/(n+2)'),\n    expression('h b^2 n / (2 n + 4 )')))", "description": "", "templateType": "anything"}, "ybar_el": {"name": "ybar_el", "group": "answers", "definition": "expression(['y','y/2','y','(h+y)/2'][version])", "description": "", "templateType": "anything"}, "xbar": {"name": "xbar", "group": "answers", "definition": " substitute([\"n\" :n],\n  if(Above=1,\n    expression('b* (n+1)/(n+2)'),\n    expression('b * (n+1)/(n+2)')))", "description": "<p>expression(\"(\"+ string(Qy) +\")/(\"+ string(area) +\")\")</p>", "templateType": "anything"}, "debug": {"name": "debug", "group": "inputs", "definition": "false", "description": "", "templateType": "anything"}, "k": {"name": "k", "group": "inputs", "definition": "expression(if(vertical=1,'h/b^n','b/h^(1/n)'))", "description": "", "templateType": "anything"}, "Qx": {"name": "Qx", "group": "answers", "definition": " substitute([\"n\" :n],\n  if(Above=1,\n    expression('(b h^2 /2)(3n+1)/((n+1) (2n+1))'),\n    expression('h^2 b n^2/((n+1)(2n+1))')))", "description": "", "templateType": "anything"}, "Above": {"name": "Above", "group": "inputs", "definition": "random(0,1)", "description": "<p>area above or below the curve?</p>", "templateType": "anything"}, "version": {"name": "version", "group": "inputs", "definition": "2 above + vertical\n", "description": "<p>0 = below horizontal</p>\n<p>1 = below vertical</p>\n<p>2 = above horizontal</p>\n<p>3 = above vertical</p>\n<p>horizontal strips not implemented</p>", "templateType": "anything"}, "Vertical": {"name": "Vertical", "group": "inputs", "definition": "random(0,1)", "description": "<p>0 = horizontal strips</p>\n<p>1 = vertical strips? &nbsp;Horizontal strips not currently implemented.</p>\n<p></p>\n<p>&nbsp;Can't figure out how to pass a boolean to geogebra, so using {0,1} instead. Only exponents &lt; 2 can be horizontal &nbsp;</p>", "templateType": "anything"}, "ybar": {"name": "ybar", "group": "answers", "definition": " substitute([\"n\" :n],if(Above=1,\n    expression('h * (3 n +1)/(4 n+2)'),\n    expression('h n / (2 n+1)')))", "description": "<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</p>", "templateType": "anything"}, "area": {"name": "area", "group": "answers", "definition": " substitute([\"n\" :n], if(Above=1, \n    expression('b h / (n+1)'),\n    expression('b h n /(n +1)')))", "description": "<p>ok</p>", "templateType": "anything"}, "lower_limit": {"name": "lower_limit", "group": "answers", "definition": "0", "description": "", "templateType": "anything"}, "n": {"name": "n", "group": "inputs", "definition": "random(1/3,1/2,1,3/2,2,3)", "description": "<p>the exponent of the function (1-kx^n) (0.5 .. 5#0.5)</p>", "templateType": "anything"}, "upper_limit": {"name": "upper_limit", "group": "answers", "definition": "if(Vertical=1,'b','h')", "description": "", "templateType": "anything"}, "xbar_el": {"name": "xbar_el", "group": "answers", "definition": "expression(['x/2','x','(b+x)/2','x'][version])", "description": "", "templateType": "anything"}, "dA": {"name": "dA", "group": "answers", "definition": "expression(['x dy','y dx','(b-x) dy','(h-y) dx'][version])", "description": "", "templateType": "anything"}}, "variablesTest": {"condition": "", "maxRuns": 100}, "ungrouped_variables": [], "variable_groups": [{"name": "inputs", "variables": ["n", "version", "Vertical", "Above", "k", "debug"]}, {"name": "answers", "variables": ["dA", "xbar_el", "ybar_el", "upper_limit", "lower_limit", "area", "Qy", "xbar", "ybar", "Qx"]}], "functions": {}, "preamble": {"js": "", "css": ""}, "parts": [{"type": "gapfill", "useCustomName": true, "customName": "Bounding function", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p>The bounding funtion&nbsp;contains a constant $k$ which can be expressed in terms of&nbsp;$b$ and $h$. &nbsp;Determine the value of $k$ in terms of <em>b</em> and <em>h&nbsp;</em>by substituting in the coordinates of a point which is on the curve into the bounding function.</p>\n<p>$k$ =&nbsp;[[0]] <span data-jme-visible=\"debug\">{k}</span></p>\n<p></p>", "gaps": [{"type": "jme", "useCustomName": true, "customName": "k", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "answer": "h/b^{n}", "showPreview": true, "checkingType": "absdiff", "checkingAccuracy": 0.001, "failureRate": 1, "vsetRangePoints": 5, "vsetRange": [0, 1], "checkVariableNames": false, "singleLetterVariables": false, "allowUnknownFunctions": true, "implicitFunctionComposition": false, "valuegenerators": [{"name": "b", "value": ""}, {"name": "h", "value": ""}]}], "sortAnswers": false}, {"type": "gapfill", "useCustomName": true, "customName": "Strip", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p>Determine the area of the rectangular differential strip.</p>\n<p>$dA$ =&nbsp;[[0]] <span data-jme-visible=\"debug\">{da}</span></p>\n<p>Determine expressions for the coordinates of the centroid of the strip.</p>\n<p>$\\bar{x}_{el} = $ [[1]]&nbsp;$\\qquad\\bar{y}_{el} = $&nbsp;[[2]]&nbsp;&nbsp;<span data-jme-visible=\"debug\">xbar= {xbar_el} &nbsp;ybar = {ybar_el}</span></p>", "gaps": [{"type": "jme", "useCustomName": true, "customName": "$dA$", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "answer": "{dA}", "showPreview": true, "checkingType": "absdiff", "checkingAccuracy": 0.001, "failureRate": 1, "vsetRangePoints": 5, "vsetRange": [0, 1], "checkVariableNames": false, "singleLetterVariables": false, "allowUnknownFunctions": true, "implicitFunctionComposition": false, "valuegenerators": []}, {"type": "jme", "useCustomName": true, "customName": "$\\bar{x}$", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "answer": "{xbar_el}", "showPreview": true, "checkingType": "absdiff", "checkingAccuracy": 0.001, "failureRate": 1, "vsetRangePoints": 5, "vsetRange": [0, 1], "checkVariableNames": false, "singleLetterVariables": false, "allowUnknownFunctions": true, "implicitFunctionComposition": false, "valuegenerators": []}, {"type": "jme", "useCustomName": true, "customName": "$\\bar{y}$", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "answer": "{ybar_el}", "showPreview": true, "checkingType": "absdiff", "checkingAccuracy": 0.001, "failureRate": 1, "vsetRangePoints": 5, "vsetRange": [0, 1], "checkVariableNames": false, "singleLetterVariables": false, "allowUnknownFunctions": true, "implicitFunctionComposition": false, "valuegenerators": []}], "sortAnswers": false}, {"type": "gapfill", "useCustomName": true, "customName": "Limits", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p>Determine the limits of integration for these strips.</p>\n<p>Lower limit is:&nbsp;[[0]] <span data-jme-visible=\"debug\">{0}</span>&nbsp;$\\qquad$ Upper limit is:&nbsp;[[1]] <span data-jme-visible=\"debug\">{upper_limit}</span></p>", "gaps": [{"type": "patternmatch", "useCustomName": true, "customName": "lower", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "answer": "0", "displayAnswer": "", "matchMode": "exact"}, {"type": "patternmatch", "useCustomName": true, "customName": "upper", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "answer": "{upper_limit}", "displayAnswer": "", "matchMode": "exact"}], "sortAnswers": false}, {"type": "gapfill", "useCustomName": true, "customName": "Area", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p>With the information determined above, evaluate this integral to find the area of the spandrel in terms of constants <em>b</em> and <em>h</em>.</p>\n<p>$A = &nbsp;\\int dA &nbsp;= $&nbsp;[[0]]&nbsp; &nbsp;</p>\n<p><span data-jme-visible=\"debug\">area = {area}</span></p>", "gaps": [{"type": "jme", "useCustomName": true, "customName": "area", "marks": "10", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "answer": "{area}", "showPreview": true, "checkingType": "absdiff", "checkingAccuracy": 0.001, "failureRate": 1, "vsetRangePoints": 5, "vsetRange": [0, 1], "checkVariableNames": false, "singleLetterVariables": true, "allowUnknownFunctions": true, "implicitFunctionComposition": false, "valuegenerators": []}], "sortAnswers": false}, {"type": "gapfill", "useCustomName": true, "customName": "First Moments", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p>Perform the following integrals to determine the first moments of area with respect to the x- and y-axis.</p>\n<p></p>\n<p>$Q_x = \\int \\bar{y}_{el} dA =$ [[0]] <span data-jme-visible=\"debug\">{Qx}</span> $\\qquad Q_y = \\int \\bar{x}_{el} dA =$&nbsp;[[1]]&nbsp;<span data-jme-visible=\"debug\">{Qy}</span></p>\n<p></p>", "gaps": [{"type": "jme", "useCustomName": true, "customName": "qx", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "answer": "{Qx}", "showPreview": true, "checkingType": "absdiff", "checkingAccuracy": 0.001, "failureRate": 1, "vsetRangePoints": 5, "vsetRange": [0, 1], "checkVariableNames": false, "singleLetterVariables": false, "allowUnknownFunctions": true, "implicitFunctionComposition": false, "valuegenerators": []}, {"type": "jme", "useCustomName": true, "customName": "qy", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "answer": "{Qy}", "showPreview": true, "checkingType": "absdiff", "checkingAccuracy": 0.001, "failureRate": 1, "vsetRangePoints": 5, "vsetRange": [0, 1], "checkVariableNames": false, "singleLetterVariables": false, "allowUnknownFunctions": true, "implicitFunctionComposition": false, "valuegenerators": []}], "sortAnswers": false}, {"type": "gapfill", "useCustomName": true, "customName": "Centroid", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p>Use the information you found above to determine the coordinates of the centroid of the shaded spandrel.</p>\n<p>$\\bar{x}&nbsp;= \\dfrac{Q_y}{A} = $ &nbsp;[[0]]&nbsp;&nbsp;<span data-jme-visible=\"debug\">{xbar} &nbsp;</span>$\\qquad\\bar{y}&nbsp;= \\dfrac{Q_x}{A} = $ &nbsp;[[1]]&nbsp;&nbsp;<span data-jme-visible=\"debug\">{ybar} &nbsp;</span></p>", "gaps": [{"type": "jme", "useCustomName": true, "customName": "xbar", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "answer": "{xbar}", "showPreview": true, "checkingType": "absdiff", "checkingAccuracy": 0.001, "failureRate": 1, "vsetRangePoints": 5, "vsetRange": [0, 1], "checkVariableNames": false, "singleLetterVariables": false, "allowUnknownFunctions": true, "implicitFunctionComposition": false, "valuegenerators": []}, {"type": "jme", "useCustomName": true, "customName": "ybar", "marks": "5", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "answer": "{ybar}", "showPreview": true, "checkingType": "absdiff", "checkingAccuracy": 0.001, "failureRate": 1, "vsetRangePoints": 5, "vsetRange": [0, 1], "checkVariableNames": false, "singleLetterVariables": false, "allowUnknownFunctions": true, "implicitFunctionComposition": false, "valuegenerators": []}], "sortAnswers": false}], "partsMode": "all", "maxMarks": 0, "objectives": [], "penalties": [], "objectiveVisibility": "always", "penaltyVisibility": "always"}, {"name": "Centroid by integration: upper and lower bounds are functions", "extensions": ["geogebra", "quantities"], "custom_part_types": [], "resources": [], "navigation": {"allowregen": true, "showfrontpage": false, "preventleave": false}, "contributors": [{"name": "William Haynes", "profile_url": "https://numbas.mathcentre.ac.uk/accounts/profile/2530/"}], "tags": ["centroid", "integration", "mechanics", "Mechanics", "Statics", "statics"], "metadata": {"description": "<p>Use integration to find the centroid of an area bounded by a parabola, a sloping line, and the y-axis. &nbsp;</p>", "licence": "Creative Commons Attribution-ShareAlike 4.0 International"}, "statement": "<p style=\"float: left; padding: 3px;\">{applet()}</p>\n<p>Determine the coordinates of the centroid of the shaded area bounded by the $y$-axis, a parabola passing throught the origin and point $A$, and a straight line passing through points $A$ and $B$.</p>\n<p></p>\n<p>Given: &nbsp;$A = ( \\var{A[0]}, \\var{A[1]} ),&nbsp;B = (0, \\var{b}) $</p>\n<p></p>", "advice": "<p style=\"clear: both;\"><strong>Bounding Functions</strong></p>\n<p style=\"padding-left: 30px;\">Parabola: $f(x) = k x^2$</p>\n<p style=\"padding-left: 60px;\">at $x=\\var{A[0]},&nbsp;f(x)=\\var{A[1]}$ , so $k = \\dfrac{\\var{A[1]}}{\\var{A[0]}^2}$</p>\n<p style=\"padding-left: 60px;\">so, $f(x) = \\var[fractionNumbers]{A[1]/A[0]^2} x^2$</p>\n<p style=\"padding-left: 30px;\">Line: $g(x) = m x + b$</p>\n<p style=\"padding-left: 60px;\">where $m = \\dfrac{(\\var{A[1]}-\\var{b})}{\\var{x}}$, and $b = \\var{b}$</p>\n<p style=\"padding-left: 60px;\">so, g(x) = $\\var[fractionNumbers]{(A[1]-b)&nbsp;/x} x + \\var{b}$</p>\n<p><strong>Strip Properties for Vertical strips</strong></p>\n<p style=\"padding-left: 30px;\">$dA = [g(x) - f(x)]\\; dx =\\left(\\simplify[all]{- {A[1]}/{A[0]}^2} x^2 +\\simplify{({A[1]}-{b}) /{x}} x + \\simplify{{b}} \\right )\\; dx $</p>\n<p style=\"padding-left: 30px;\">$\\bar{x}_{el} = x$</p>\n<p style=\"padding-left: 30px;\">$\\bar{y}_{el} = \\dfrac{g(x) + f(x)}{2}&nbsp;$</p>\n<p><strong>Integrals</strong></p>\n<p style=\"padding-left: 30px;\">$A = \\int_0^\\var{x}\\; dA =&nbsp;\\var{siground(area,4)} \\text{ units}^2$</p>\n<p style=\"padding-left: 30px;\">$Q_y = \\int_0^\\var{x} \\bar{x}_{el} \\; dA = \\var{siground(Qy,4)} \\text{ units}^3$</p>\n<p style=\"padding-left: 30px;\">$Q_x = \\int_0^\\var{x}&nbsp;\\bar{y}_{el} \\; dA = \\var{siground(Qx,4)}\\text{ units}^3$</p>\n<p><strong>Centroid</strong></p>\n<p style=\"padding-left: 30px;\">&nbsp;$\\bar{x} = \\dfrac{Q_y}{A} = \\var{siground(xbar,4)}$&nbsp;&nbsp;units</p>\n<p style=\"padding-left: 30px;\"><strong></strong>&nbsp;$\\bar{y} = \\dfrac{Q_x}{A} = \\var{siground(ybar,4)}$&nbsp;&nbsp;units</p>", "rulesets": {}, "variables": {"A": {"name": "A", "group": "Ungrouped variables", "definition": "vector(random(1..10),random(3..12))", "description": "", "templateType": "anything"}, "b": {"name": "b", "group": "Ungrouped variables", "definition": "random(0..10)", "description": "<p>y&nbsp;component of point B</p>", "templateType": "anything"}, "k": {"name": "k", "group": "Ungrouped variables", "definition": "A[1]/A[0]^2", "description": "", "templateType": "anything"}, "m": {"name": "m", "group": "Ungrouped variables", "definition": "(A[1]-b)/A[0]", "description": "<p>slope</p>", "templateType": "anything"}, "area": {"name": "area", "group": "Unnamed group", "definition": "- k x^3/3 + m x^2/2 + b x", "description": "", "templateType": "anything"}, "x": {"name": "x", "group": "Ungrouped variables", "definition": "A[0]", "description": "", "templateType": "anything"}, "Qy": {"name": "Qy", "group": "Unnamed group", "definition": "- k x^4/4 + m x^3/3 + b x^2/2", "description": "", "templateType": "anything"}, "xbar": {"name": "xbar", "group": "Unnamed group", "definition": "Qy/area", "description": "", "templateType": "anything"}, "Qx": {"name": "Qx", "group": "Unnamed group", "definition": "(-k^2 x^5/5 + m^2 x^3/3 +  m b x^2 + b^2 x)/2", "description": "", "templateType": "anything"}, "ybar": {"name": "ybar", "group": "Unnamed group", "definition": "Qx/area", "description": "", "templateType": "anything"}}, "variablesTest": {"condition": "m <> 0 // don't want the line to be horizontal", "maxRuns": 100}, "ungrouped_variables": ["A", "b", "k", "m", "x"], "variable_groups": [{"name": "Unnamed group", "variables": ["area", "Qy", "xbar", "Qx", "ybar"]}], "functions": {"g": {"parameters": [["x", "number"]], "type": "number", "language": "jme", "definition": " m x + by"}, "applet": {"parameters": [], "type": "ggbapplet", "language": "javascript", "definition": "//{geogebra_applet('cpf7gyej',['A': A, 'by': b,  \"C\": [visible: false, label_style: 3]])}\n// Create the worksheet. \n// This function returns an object with a container `element` and a `promise` resolving to a GeoGebra applet.\nvar params = {\n  material_id: 'cpf7gyej'\n}\n\nvar result = Numbas.extensions.geogebra.createGeogebraApplet(params);\n\n// Once the applet has loaded, run some commands to manipulate the worksheet.\nresult.promise.then(function(d) {\n  var app = d.app;\n  question.applet = d;\n   \n  //initialize the dimensions and forces\n  \n   function setGGBPoint(g_name, n_name = g_name) {\n    // moves point in GGB to location of Numbas Vector Variable\n    // g_name = geogebra point, n_name = numbas vector\n    \n    //var pt = question.scope.evaluate(n_name).value\n    var pt = scope.getVariable(n_name).value\n    app.setFixed(g_name,false,false);\n    app.setCoords(g_name, pt[0], pt[1]);\n    app.setFixed(g_name,true,true);\n  }\n  \n  function setGGBNumber(gname, nname=gname) {\n    // Sets number in GGB to a Numbas Variable\n    var n = question.scope.evaluate(nname).value;\n    app.setValue(gname,n);\n  }\n    \n  setGGBPoint(\"A\");\n  setGGBNumber(\"by\", \"b\");\n  app.setVisible(\"C\",false);// centroid\n\n  \n});\n\n// This function returns the result of `createGeogebraApplet` as an object \n// with the JME data type 'ggbapplet', which can be substituted into the question's content.\nreturn new Numbas.jme.types.ggbapplet(result);\n"}}, "preamble": {"js": "question.signals.on('adviceDisplayed',function() {\n  var app = Numbas.exam.currentQuestion.applet.app; \n  app.setVisible(\"C\", true,false); \n})\n\n\n", "css": ""}, "parts": [{"type": "gapfill", "useCustomName": false, "customName": "", "marks": 0, "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "prompt": "<p style=\"padding-left: 30px;\">$\\bar{x} = $&nbsp;[[0]]&nbsp;units</p>\n<p style=\"padding-left: 30px;\">$\\bar{y} = $&nbsp;[[1]] units</p>", "gaps": [{"type": "numberentry", "useCustomName": true, "customName": "xbar", "marks": "10", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "minValue": "xbar", "maxValue": "xbar", "correctAnswerFraction": false, "allowFractions": false, "mustBeReduced": false, "mustBeReducedPC": 0, "precisionType": "sigfig", "precision": "3", "precisionPartialCredit": 0, "precisionMessage": "You have not given your answer to the correct precision.", "strictPrecision": false, "showPrecisionHint": false, "notationStyles": ["plain", "en", "si-en"], "correctAnswerStyle": "plain"}, {"type": "numberentry", "useCustomName": true, "customName": "ybar", "marks": "10", "scripts": {}, "customMarkingAlgorithm": "", "extendBaseMarkingAlgorithm": true, "unitTests": [], "showCorrectAnswer": true, "showFeedbackIcon": true, "variableReplacements": [], "variableReplacementStrategy": "originalfirst", "nextParts": [], "suggestGoingBack": false, "adaptiveMarkingPenalty": 0, "exploreObjective": null, "minValue": "ybar", "maxValue": "ybar", "correctAnswerFraction": false, "allowFractions": false, "mustBeReduced": false, "mustBeReducedPC": 0, "precisionType": "sigfig", "precision": "3", "precisionPartialCredit": 0, "precisionMessage": "You have not given your answer to the correct precision.", "strictPrecision": false, "showPrecisionHint": false, "notationStyles": ["plain", "en", "si-en"], "correctAnswerStyle": "plain"}], "sortAnswers": false}], "partsMode": "all", "maxMarks": 0, "objectives": [], "penalties": [], "objectiveVisibility": "always", "penaltyVisibility": "always"}]}], "allowPrinting": true, "navigation": {"allowregen": true, "reverse": true, "browse": true, "allowsteps": true, "showfrontpage": false, "showresultspage": "oncompletion", "navigatemode": "menu", "onleave": {"action": "none", "message": ""}, "preventleave": true, "startpassword": ""}, "timing": {"allowPause": true, "timeout": {"action": "none", "message": ""}, "timedwarning": {"action": "none", "message": ""}}, "feedback": {"showactualmark": true, "showtotalmark": true, "showanswerstate": true, "allowrevealanswer": true, "advicethreshold": 0, "intro": "", "reviewshowscore": true, "reviewshowfeedback": true, "reviewshowexpectedanswer": true, "reviewshowadvice": true, "feedbackmessages": []}, "contributors": [{"name": "William Haynes", "profile_url": "https://numbas.mathcentre.ac.uk/accounts/profile/2530/"}], "extensions": ["/srv/numbas/media/user-extensions/extracted/41/geogebra", "/srv/numbas/media/user-extensions/extracted/55/quantities", "/srv/numbas/media/user-extensions/extracted/98/weh"], "custom_part_types": [{"source": {"pk": 19, "author": {"name": "William Haynes", "pk": 2530}, "edit_page": "/part_type/19/edit"}, "name": "Engineering Accuracy with units", "short_name": "engineering-answer", "description": "<p>A value with units marked right if within an adjustable % error of the correct value. &nbsp;Marked close if within a wider margin of error.</p>", "help_url": "", "input_widget": "string", "input_options": {"correctAnswer": "siground(settings['correctAnswer'],4)", "hint": {"static": true, "value": ""}, "allowEmpty": {"static": true, "value": true}}, "can_be_gap": true, "can_be_step": true, "marking_script": "mark:\nswitch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n\n\ninterpreted_answer:\nqty(student_scalar, student_units)\n\n\n\ncorrect_quantity:\nsettings[\"correctAnswer\"]\n\n\n\ncorrect_units:\nunits(correct_quantity)\n\n\nallowed_notation_styles:\n[\"plain\",\"en\"]\n\nmatch_student_number:\nmatchnumber(studentAnswer,allowed_notation_styles)\n\nstudent_scalar:\nmatch_student_number[1]\n\nstudent_units:\njoin(\nsplit(\njoin(\nsplit(studentAnswer[len(match_student_number[0])..len(studentAnswer)],\"-\"),\" \"),\"\u00b0\"),\" deg\")\n\n\ngood_units:\ntry(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n\n\nstudent_quantity:\nswitch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n\n\npercent_error:\ntry(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   \n\nright:\npercent_error <= settings['right']\n\n\nclose:\nright_sign and percent_error <= settings['close']\n\nright_sign:\nsign(student_scalar) = sign(correct_quantity)", "marking_notes": [{"name": "mark", "description": "This is the main marking note. It should award credit and provide feedback based on the student's answer.", "definition": "switch( \n  right and good_units and right_sign, add_credit(1.0,'Correct.'),\n  right and good_units and not right_sign, add_credit(settings['C2'],'Wrong sign.'),\n  right and right_sign and not good_units, add_credit(settings['C2'],'Correct value, but wrong or missing units.'),\n  close and good_units, add_credit(settings['C1'],'Close.'),\n  close and not good_units, add_credit(settings['C3'],'Answer is close, but wrong or missing units.'),\n  incorrect('Wrong answer.')\n)\n"}, {"name": "interpreted_answer", "description": "A value representing the student's answer to this part.", "definition": "qty(student_scalar, student_units)\n\n"}, {"name": "correct_quantity", "description": "", "definition": "settings[\"correctAnswer\"]\n\n"}, {"name": "correct_units", "description": "", "definition": "units(correct_quantity)\n"}, {"name": "allowed_notation_styles", "description": "", "definition": "[\"plain\",\"en\"]"}, {"name": "match_student_number", "description": "", "definition": "matchnumber(studentAnswer,allowed_notation_styles)"}, {"name": "student_scalar", "description": "", "definition": "match_student_number[1]"}, {"name": "student_units", "description": "<p>Does clumsy substitution to</p>\n<p>1.&nbsp;replace '-'&nbsp;with ' '&nbsp;</p>\n<p>2. replace '&deg;' with ' deg'&nbsp;</p>\n<p>to allow answers like 10 ft-lb and 30&deg;</p>", "definition": "join(\nsplit(\njoin(\nsplit(studentAnswer[len(match_student_number[0])..len(studentAnswer)],\"-\"),\" \"),\"\u00b0\"),\" deg\")\n"}, {"name": "good_units", "description": "", "definition": "try(\ncompatible(quantity(1, student_units),correct_units),\nmsg,\nfeedback(msg);false)\n"}, {"name": "student_quantity", "description": "<p>This fixes the student answer for two common errors. &nbsp;</p>\n<p>If student_units are wrong&nbsp;&nbsp;- replace with correct units</p>\n<p>If student_scalar has the wrong sign - replace with right sign</p>\n<p>If student makes both errors, only one gets fixed.</p>", "definition": "switch(not good_units, \n       student_scalar * correct_units, \n       not right_sign,\n       -quantity(student_scalar, student_units),\n       quantity(student_scalar,student_units)\n)\n  \n"}, {"name": "percent_error", "description": "", "definition": "try(\nscalar(abs((correct_quantity - student_quantity)/correct_quantity))*100  \n,msg,\nif(student_quantity=correct_quantity,0,100))\n   "}, {"name": "right", "description": "", "definition": "percent_error <= settings['right']\n"}, {"name": "close", "description": "<p>Only marked close if the student actually has the right sign.</p>", "definition": "right_sign and percent_error <= settings['close']"}, {"name": "right_sign", "description": "", "definition": "sign(student_scalar) = sign(correct_quantity) "}], "settings": [{"name": "correctAnswer", "label": "Correct Quantity.", "help_url": "", "hint": "The correct answer given as a JME quantity.", "input_type": "code", "default_value": "", "evaluate": true}, {"name": "right", "label": "% Accuracy for right.", "help_url": "", "hint": "Question will be considered correct if the scalar part of the student's answer is within this % of correct value.", "input_type": "code", "default_value": "0.2", "evaluate": true}, {"name": "close", "label": "% Accuracy for close.", "help_url": "", "hint": "Question will be considered close if the scalar part of the student's answer is within this % of correct value.", "input_type": "code", "default_value": "1.0", "evaluate": true}, {"name": "C1", "label": "Close with units.", "help_url": "", "hint": "Partial Credit for close value with appropriate units. &nbsp;if correct answer is 100 N and close is &plusmn;1%,<br />99 &nbsp;N is accepted.", "input_type": "percent", "default_value": "75"}, {"name": "C2", "label": "No units or wrong sign", "help_url": "", "hint": "Partial credit for forgetting units or using wrong sign.<br />If the correct answer is 100 N, both 100 and -100 N are accepted.", "input_type": "percent", "default_value": "50"}, {"name": "C3", "label": "Close, no units.", "help_url": "", "hint": "Partial Credit for close value but forgotten units.<br />This value would be close&nbsp;if the expected units were provided. &nbsp;If the correct answer is 100 N, and close is &plusmn;1%,<br />99 is accepted.", "input_type": "percent", "default_value": "25"}], "public_availability": "always", "published": true, "extensions": ["quantities"]}], "resources": [["question-resources/centroid-integration.ggb", "/srv/numbas/media/question-resources/centroid-integration.ggb"]]}