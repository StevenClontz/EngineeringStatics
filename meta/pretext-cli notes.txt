Comments and notes:

Problem: pretext-cli simply copies external contents
Solution: wrote script to flatten and move as I need.

<interactive platform="geogebra"  source="code/ggb_2-16.js">
        <slate surface="geogebra" source="images/3d-dot_product.ggb">
        <slate  surface="html">

need platform=geogebra and source=javascript in interactive

Problem: Need html to get buttons and input fields.
Solution: use slate = html, source='file.js'

Problem: need to render pretext in slate=html
Solution: ?

Problem: need to communicate to-from ggb applet.  Need the api
Solution: load ggb in a promise, then get the api as a variable
Solution: add a callback during ggb.onLoad which passes api to javascript

Problem: MathJax needs to rerender math in slate when it is updated
Solution: Mathjax has provision for this.  Don't understand it.

Problem:  I don't like current rendering for interactive/instructions.
Solution: Use preprocessor to  put instruction into an aside, which I like better than current rendering.  Should consider for xslt.


pretext-cli pre and post hooks would be nice


Interactives and slates:


Instructions:
 
Essential elements/attributes:	
	
<interactive platform="geogebra" source="code/name.js">
	<slate  surface="geogebra"  xml:id="whatever" source="images/unit_vector.ggb">
	<slate surface="html">
     <p id='info'></p>
 
 In code/name.js write function as slate@xmlId_listeners which does what you want.  Argument passed to this function is the ggb applet api
 
 example javscript listener function:
 
 var ggb_2__10_listeners = function(ggb) {
		var updateSlate = function (){
    	document.getElementById('info').innerHTML = ggb.getValueString('Text1')
    }   
		ggb.registerUpdateListener(updateSlate);
		updateSlate(); 
}

To Update book:

1.  Pull from github - get latest content from others.
2.  Edit and change source, then run these make commands:
3.	make images  - moves resources to statics/build/generated and statics/build/external
4.	make html  - generates html files to statics/build/html
5.	make pdf   - generates pdf file to statics/build/pdf
6.  make publish - moves files to statics/docs
7.  push to github - updates repository files in docs are public.


Question:  Where is the pretext.cli script?